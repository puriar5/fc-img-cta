{"version":3,"sources":["../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","page-partner-with-us.scss"],"names":[],"mappings":"AA4EI,4BC1EJ,YAEQ,iBAAa,CAAA,CD2DjB,yBC7DJ,YAKQ,mBAAa,CAAA,CDwDjB,0BC7DJ,YAQQ,iBAAa,CAAA,CAIrB,sBACI,gBAAY,CAuBf,yBAxBD,sBAGQ,iBAAY,CAAA,CD8ChB,0BCjDJ,sBAMQ,mBAAY,CACZ,sBAAgB,CAAA,CDuDpB,6BCpDA,4BAEQ,gBAAY,CAAA,CDkDpB,4BCpDA,4BAKQ,eAAY,CAAA,CALnB,+BAQO,eAAW,CAId,yBAZJ,+BAUW,cAAW,CAAA,CAO3B,qBACI,UAAS,CACT,qBAAgB,CAiBnB,0BAnBD,6BAKY,iBAAU,CACV,UAAS,CACT,SAAK,CACL,MAAM,CACN,WAAQ,CACR,UAAO,CACP,kBAAY,CAAA,CDWpB,0BCRA,2BAEQ,iBAAU,CAAA","file":"../page-partner-with-us.min.css","sourcesContent":["// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import '../common-imports';\n\n.wide-image {\n    @include media-breakpoint-down(md){\n        padding-top: 14rem;\n    }\n    @include media-breakpoint-up(md){\n        padding-top: 14.8rem;\n    }\n    @include media-breakpoint-up(lg){\n        padding-top: 24rem;\n    }\n}\n\n.bullettext-l-image-r {\n    margin-top: -6rem;\n    @include media-breakpoint-up(md) {\n        margin-top: -12rem;\n    }\n    @include media-breakpoint-up(xl) {\n        margin-top: -30.6rem;\n        padding-bottom: 16.5rem;\n    }\n\n    &__text{\n        @include media-breakpoint-down(lg){\n            margin-top: 10rem;\n        }\n        @include media-breakpoint-down(md){\n            margin-top: 5rem;\n        }\n        h2 {\n            max-width: 295px;\n            @include media-breakpoint-up(md) {\n                max-width: 100%;\n            }\n        }\n    }\n}\n\n\n.form-module-partner {\n    z-index: 22;\n    padding-bottom: 8.4rem;\n    &::before {\n        @include media-breakpoint-up(xl) {\n            position: absolute;\n            content: \"\"; \n            top: -50px;\n            left: 0;\n            height: 50px;\n            width: 100%;\n            background: #eae0d5;\n        }\n    }\n    &__icon {\n        @include media-breakpoint-up(xl) {\n            position: relative;\n        }\n    }\n}\n\n\n"]}