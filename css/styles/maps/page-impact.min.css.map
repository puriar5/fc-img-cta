{"version":3,"sources":["page-impact.scss","../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAGA,cAEI,mBAAS,CAqCZ,0BAvCD,cAKQ,yBAAS,CAAA,CALjB,iBASQ,cAAW,CACX,kBAAa,CAShB,yBAnBL,iBAYY,gBAAW,CACX,kBAAa,CAAA,CC+CrB,0BD5DJ,iBAgBY,cAAW,CACX,kBAAa,CAAA,CAjBzB,8BAuBY,uBAAiB,CAAjB,8BAAiB,CAAjB,oBAAiB,CAAjB,sBAAiB,CAMpB,mDA7BT,4CA0BoB,YAAO,CAAA,CCkCvB,0BD5DJ,gBAkCY,cAAW,CACX,gBAAa,CAAA,CAMzB,8BAEQ,eAAe,CAClB,8CAIO,kBAAY,CAOf,yBATJ,8CAIW,kBAAY,CAAA,CCUxB,0BDdC,8CAOW,mBAAY,CAAA,CAQxB,SACI,oBAAS,CAaZ,yBAdD,SAGQ,oBAAS,CAAA,CCJjB,0BDCA,SAMQ,oBAAS,CAAA,CCPjB,0BDCA,SASQ,qBAAS,CAAA,CAThB,oBAYO,eAAU,CACb,SAID,cAAS,CAUZ,yBAXD,SAGQ,cAAS,CAAA,CCpBjB,0BDiBA,SAMQ,oBAAS,CAAA,CANhB,oBASO,eAAU,CACb,SAID,cAAS,CAUZ,yBAXD,SAGQ,cAAS,CAAA,CCjCjB,0BD8BA,SAMQ,oBAAS,CAAA,CANhB,oBASO,eAAU,CACb,iBAML,iBAAY,CAgBf,yBAjBD,iBAGQ,iBAAY,CAAA,CChDhB,0BD6CJ,iBAMQ,iBAAY,CAAA,CCnDhB,0BD6CJ,iBASQ,iBAAY,CAAA,CAEhB,qCAXJ,iBAYQ,iBAAY,CAAA,CAEhB,qCAdJ,iBAeQ,iBAAY,CAAA","file":"../page-impact.min.css","sourcesContent":["@import '../common-imports';\n\n\n.section-post {\n\n    padding: 3rem 0 4rem;\n\n    @include media-breakpoint-up(lg) {\n        padding: 12.1rem 0 11.6rem;\n    }\n\n    h1 {\n        font-size: 4rem;\n        line-height: 4.4rem;\n        @include media-breakpoint-up(md) {\n            font-size: 4.8rem;\n            line-height: 5.6rem;\n        }\n        @include media-breakpoint-up(lg) {\n            font-size: 6rem;\n            line-height: 6.8rem;\n        }\n    }\n\n    .container {\n        .row {\n            justify-content: center;\n            [class*=\"col-\"] {\n                @include media-breakpoint-between(md, lg) {\n                    width: 83.33%;\n                }\n            }\n        }\n    }\n\n    p {\n        @include media-breakpoint-up(lg) {\n            font-size: 2rem;\n            line-height: 3rem;\n        }\n    }\n\n}\n\n.featured-icon {\n    .js-bodymoving {\n        margin-bottom: 0;\n    }\n\n    &--reverse {\n        .featured-icon-figure {\n            margin-top: -5.2rem;\n            @include media-breakpoint-up(md) {\n                margin-top: -7.2rem;\n            }\n            @include media-breakpoint-up(lg) {\n                margin-top: -11.2rem;\n            }\n        }\n    }\n}\n\n.chart {\n\n    &-a {\n        padding: 5rem 0 26rem;\n        @include media-breakpoint-up(md) {\n            padding: 7rem 0 29rem;\n        }\n        @include media-breakpoint-up(lg) {\n            padding: 7rem 0 35rem;\n        }\n        @include media-breakpoint-up(xl) {\n            padding: 11rem 0 46rem;\n        }\n        .container {\n            overflow: hidden;\n        }\n    }\n\n    &-b {\n        padding: 5rem 0;\n        @include media-breakpoint-up(md) {\n            padding: 7rem 0;\n        }\n        @include media-breakpoint-up(lg) {\n            padding: 6rem 0 13rem;\n        }\n        .container {\n            overflow: hidden;\n        }\n    }\n\n    &-c {\n        padding: 5rem 0;\n        @include media-breakpoint-up(md) {\n            padding: 7rem 0;\n        }\n        @include media-breakpoint-up(lg) {\n            padding: 14rem 0 8rem;\n        }\n        .container {\n            overflow: hidden;\n        }\n    }\n\n}\n\n.quote-l-image-r {\n    margin-top: -28rem;\n    @include media-breakpoint-up(md) {\n        margin-top: -37rem;\n    }\n    @include media-breakpoint-up(lg) {\n        margin-top: -47rem;\n    }\n    @include media-breakpoint-up(xl) {\n        margin-top: -53rem;\n    }\n    @media screen and (min-width: 1366px) {\n        margin-top: -63rem;\n    }\n    @media screen and (min-width: 1700px) {\n        margin-top: -78rem;\n    }\n}\n\n\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}